# Generated by Django 5.1.3 on 2024-12-03 06:59

import django.db.models.deletion
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='100 Character', max_length=100, unique=True)),
                ('english_name', models.CharField(help_text='100 Character', max_length=100, unique=True)),
                ('slug', models.SlugField(allow_unicode=True, blank=True, max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='50 Character', max_length=50, unique=True)),
                ('english_name', models.CharField(help_text='50 Character', max_length=50, unique=True)),
                ('slug', models.SlugField(allow_unicode=True, blank=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_description', models.CharField(help_text='150 Character', max_length=150)),
                ('meta_keyword', models.CharField(help_text='150 Character', max_length=150, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='255 Character', max_length=255, unique=True)),
                ('english_title', models.CharField(help_text='255 Character', max_length=255, unique=True)),
                ('introduction', models.TextField()),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('publish', models.BooleanField(default=True)),
                ('slug', models.SlugField(blank=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blogs', to='blog_app.blogcategory')),
                ('tags', models.ManyToManyField(related_name='blogs', to='blog_app.blogtag')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('rating', models.PositiveSmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog_app.blogcomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_comments', to=settings.AUTH_USER_MODEL)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog_app.blogpost')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='BlogPoster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('size', models.FloatField(blank=True, help_text='in kilobytes')),
                ('poster', models.ImageField(height_field='height', help_text='822 Ã— 522 px', upload_to='blog-image', width_field='width')),
                ('blog', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='poster', to='blog_app.blogpost')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
